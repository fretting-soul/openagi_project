{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\projects\\\\openagi_project\\\\openagi_app\\\\src\\\\pages\\\\RunStackPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport Footer from '../components/Footer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RunStackPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [stack, setStack] = useState(null);\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  useEffect(() => {\n    fetch(`http://127.0.0.1:8000/stacks/${id}`).then(response => response.json()).then(data => setStack(data)).catch(error => console.error('Error fetching stack details:', error));\n  }, [id]);\n  const openChat = () => setIsChatOpen(true);\n  const closeChat = () => setIsChatOpen(false);\n  const handleUserInput = e => {\n    setUserInput(e.target.value);\n  };\n  const handleChatSubmit = () => {\n    const newMessage = {\n      sender: 'user',\n      text: userInput\n    };\n    setChatMessages([...chatMessages, newMessage]);\n\n    // Send the user's message to the backend (replace with your backend endpoint)\n    fetch('http://127.0.0.1:8000/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: userInput\n      })\n    }).then(response => response.json()).then(data => {\n      const botMessage = {\n        sender: 'bot',\n        text: data.reply\n      };\n      setChatMessages([...chatMessages, newMessage, botMessage]);\n    }).catch(error => console.error('Error handling chat:', error));\n    setUserInput('');\n  };\n  if (!stack) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Run Stack: \", stack.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: stack.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openChat,\n        children: \"Run\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), isChatOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Chat Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-messages\",\n            children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: msg.sender,\n              children: msg.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userInput,\n            onChange: handleUserInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleChatSubmit,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeChat,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(RunStackPage, \"5ndhmbmsRPhf+hx72p70rRoQQnU=\", false, function () {\n  return [useParams];\n});\n_c = RunStackPage;\nexport default RunStackPage;\nvar _c;\n$RefreshReg$(_c, \"RunStackPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Header","Sidebar","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","RunStackPage","_s","id","stack","setStack","isChatOpen","setIsChatOpen","chatMessages","setChatMessages","userInput","setUserInput","fetch","then","response","json","data","catch","error","console","openChat","closeChat","handleUserInput","e","target","value","handleChatSubmit","newMessage","sender","text","method","headers","body","JSON","stringify","message","botMessage","reply","children","fileName","_jsxFileName","lineNumber","columnNumber","name","description","onClick","className","map","msg","index","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/projects/openagi_project/openagi_app/src/pages/RunStackPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport Sidebar from '../components/Sidebar';\r\nimport Footer from '../components/Footer';\r\n\r\nconst RunStackPage = () => {\r\n    const { id } = useParams();\r\n    const [stack, setStack] = useState(null);\r\n    const [isChatOpen, setIsChatOpen] = useState(false);\r\n    const [chatMessages, setChatMessages] = useState([]);\r\n    const [userInput, setUserInput] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetch(`http://127.0.0.1:8000/stacks/${id}`)\r\n            .then(response => response.json())\r\n            .then(data => setStack(data))\r\n            .catch(error => console.error('Error fetching stack details:', error));\r\n    }, [id]);\r\n\r\n    const openChat = () => setIsChatOpen(true);\r\n    const closeChat = () => setIsChatOpen(false);\r\n\r\n    const handleUserInput = (e) => {\r\n        setUserInput(e.target.value);\r\n    };\r\n\r\n    const handleChatSubmit = () => {\r\n        const newMessage = { sender: 'user', text: userInput };\r\n        setChatMessages([...chatMessages, newMessage]);\r\n\r\n        // Send the user's message to the backend (replace with your backend endpoint)\r\n        fetch('http://127.0.0.1:8000/chat', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ message: userInput }),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const botMessage = { sender: 'bot', text: data.reply };\r\n                setChatMessages([...chatMessages, newMessage, botMessage]);\r\n            })\r\n            .catch(error => console.error('Error handling chat:', error));\r\n\r\n        setUserInput('');\r\n    };\r\n\r\n    if (!stack) {\r\n        return <p>Loading...</p>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Sidebar />\r\n            <main>\r\n                <h2>Run Stack: {stack.name}</h2>\r\n                <p>{stack.description}</p>\r\n                <button onClick={openChat}>Run</button>\r\n                {isChatOpen && (\r\n                    <div className=\"chat-modal\">\r\n                        <div className=\"chat-content\">\r\n                            <h2>Chat Assistant</h2>\r\n                            <div className=\"chat-messages\">\r\n                                {chatMessages.map((msg, index) => (\r\n                                    <p key={index} className={msg.sender}>\r\n                                        {msg.text}\r\n                                    </p>\r\n                                ))}\r\n                            </div>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={userInput}\r\n                                onChange={handleUserInput}\r\n                            />\r\n                            <button onClick={handleChatSubmit}>Send</button>\r\n                            <button onClick={closeChat}>Close</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </main>\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RunStackPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}